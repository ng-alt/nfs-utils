/* Define this if you have standard C headers
 */
#undef  STDC_HEADERS

/* Define this if you have string.h */
#undef  HAVE_STRING_H

/* Define this if you have com_err.h */
#undef  HAVE_COM_ERR_H

/* Define this if you have <et/com_err.h> */
#undef  HAVE_ET_COM_ERR_H

/* Define this if you have netgroup support
 */
#undef  HAVE_INNETGR

/* Define this if you want NFSv3 support compiled in
 */
#undef  NFS3_SUPPORTED

/* This defines the location of the NFS state files
 * Warning: these must match definitions in config.mk!
 */
#define NFS_STATEDIR		"/var/lib/nfs"

/* Define this if you want to enable various security
 * checks in statd. These checks basically keep anyone
 * but lockd from using this service.
 */
#undef RESTRICTED_STATD

/* Define this if you have <spkm3.h> */
#undef  HAVE_SPKM3_H

/* Define this if you want support for rpcsec_gss with
 * the MIT krb5 mechanism compiled in */
#undef HAVE_KRB5

/* Define this if you want support for rpcsec_gss with
 * the Heimdal krb5 mechanism compiled in */
#undef HAVE_HEIMDAL

/* Define this if the Kerberos gssapi library has function
 * gss_krb5_export_lucid_sec_context */
#undef HAVE_LUCID_CONTEXT_SUPPORT

/* Define this if the Kerberos gssapi library has function
 * gss_krb5_set_allowable_enctypes */
#undef HAVE_SET_ALLOWABLE_ENCTYPES

/* Define this if the Kerberos gssapi library has function
 * gss_krb5_cache_name */
#undef HAVE_GSS_KRB5_CCACHE_NAME

/* Define this if the rpcsec_gss library has the function
 * authgss_set_debug_level */
#undef HAVE_AUTHGSS_SET_DEBUG_LEVEL

/* Define this if we want to use the private Kerberos
 * gssapi library function, gss_krb5_cache_name, to
 * specify the credentials cache file to be used by
 * the gssapi library.
 * (For MIT releases 1.3.1 and before, this must
 * be defined. For later releases we can simply
 * set the KRB5CCNAME environment variable.) */
#undef USE_GSS_KRB5_CCACHE_NAME

/* The size of a `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of a `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of a `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of a `size_t', as computed by sizeof. */
#undef SIZEOF_SIZE_T
